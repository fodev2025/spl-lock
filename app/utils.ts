import * as anchor from "@coral-xyz/anchor";
import { Program, BN } from "@coral-xyz/anchor";
import { Lock } from "../target/types/lock"; // Import types generated by anchor build
import {
  Keypair,
  PublicKey,
  SystemProgram,
  LAMPORTS_PER_SOL,
  Connection,
} from "@solana/web3.js";
import {
  TOKEN_PROGRAM_ID,
  createMint,
  createAssociatedTokenAccount,
  mintTo,
  getAccount, // To fetch token account info
  getAssociatedTokenAddressSync,
} from "@solana/spl-token";
import idl from "../target/idl/lock.json"; // Import the IDL

export async function getLockData(
  programId: PublicKey,
  mint: PublicKey,
  user: PublicKey,
  connection: anchor.web3.Connection
): Promise<{
  user: PublicKey;
  mint: PublicKey;
  amount: BN;
  unlockTime: BN;
}> {
  const program: Program<Lock> = new Program(idl, {
    connection,
  });
  const [lock] = PublicKey.findProgramAddressSync(
    [Buffer.from("lock_account"), user.toBuffer(), mint.toBuffer()],
    programId
  );

  return await program.account.lockAccount.fetch(lock);
}

async function test() {
  const connection = new anchor.web3.Connection(
    "https://api.devnet.solana.com"
  );
  const programId = new PublicKey(
    "6o1UQjdJXtQWLEMFckDhCzaBAhNEY4wzTnJs9DejqC2M"
  );
  const user = new PublicKey("CgSxsT6AdBkbC67UXdiLSvujo5VrDaVMNQEK6btNHihj");
  const mint = new PublicKey("CncXPgQrBRsj22g8c3L5UoYrgRctbHkFgPAbhJkrpRpb");
  const lockData = await getLockData(programId, mint, user, connection);
  console.log("Lock Data:", {
    user: lockData.user.toBase58(),
    mint: lockData.mint.toBase58(),
    amount: lockData.amount.toString(),
    unlockTime: lockData.unlockTime.toString(),
  });
}

test();
